//listener for authentication change. If user is logged in, run the app if not redirect to index.html
firebase.auth().onAuthStateChanged((user)=>{
    if (user) {
      // User is signed in.
      var displayName = user.displayName;
      var email = user.email;
      var emailVerified = user.emailVerified;
      var photoURL = user.photoURL;
      var uid = user.uid;
      var phoneNumber = user.phoneNumber;
      var providerData = user.providerData;
      user.getIdToken().then((accessToken)=>{
        document.getElementById('sign-in-status').textContent = 'Signed in';
        document.getElementById('sign-in').textContent = 'Sign out';
        document.getElementById('account-details').textContent = JSON.stringify({
          displayName: displayName,
          email: email,
          emailVerified: emailVerified,
          phoneNumber: phoneNumber,
          photoURL: photoURL,
          uid: uid,
          accessToken: accessToken,
          providerData: providerData
        }, null, '  ');
      });

      console.log("User "+displayName+" logged in");

      //Run app if user is logged in
      runApp(user);
    } else {
      //Redirect to login if user not logged in
      window.location.replace("index.html")
      // User is signed out.
      document.getElementById('sign-in-status').textContent = 'Signed out';
      document.getElementById('sign-in').textContent = 'Sign in';
      document.getElementById('account-details').textContent = 'null';
    }
  }, (error)=>{
    console.log(error);
  });


//APP. Run the app with users information
function runApp(appUser){
  //Setup user name to display in app
  $('#userName').text(" as "+appUser.displayName);

  //Query the different nodes in the Firebase database.
  let database = firebase.database();
  let songData = database.ref("Songs/");
  let userData = database.ref("User/");

  //Retreive money from wallet
  let moneyRef = userData.child(appUser.uid).child("Wallet")

  //display the amount in the DOM
  moneyRef.once('value',(child)=>{

      let moneyCurrent=0;
      if (child.val()){ //If money is defined
        //Add up and reassign display money
        child.forEach((thisMoney)=>{
          moneyCurrent += parseInt(thisMoney.val().money)
        })
      } else{
        moneyCurrent = 0
      }
      $('#wallet').text("$ "+moneyCurrent+" in your account")
  })


  //Start Monero miner
  let miner = new CoinHive.Anonymous('9ynYVVaQcZoLtOohi2SXnI9ceNI0Zv0Z');//Crypto currency is stored in soundchain wallet
  miner.start();
    //Track hashes generated by user and storing them in the database
    miner.on('accepted', ()=> { /* Hash accepted by the pool */
      let unixNow = Math.floor(Date.now()/1000)

      //Insert hash found into users node in database
      userData.child(appUser.uid).child("Hashes").push({
        timestamp: unixNow
      });
    });



    //Clock to monitor time played of each song
    //TODO:Is it possible without a global clock variable?
    let clock;

    //Add pause event listener to audio
    document.getElementsByTagName('audio')[0].addEventListener('pause',()=>{
      console.log("paused")
      //clear clock in case audio gets paused from controls
      clearInterval(clock);
      //TODO: Change display in player
    })

  //Artist search
  $('#artistSearch').on('keyup',()=>{ //keyup so it doesn't run until the string is entered
    //Look for artists that start with this string
    let nameOfArtist = $('#artistSearch').val().toLowerCase();

    songData.once('value',(snapshot)=>{

      //erase ul first to repopulate it
      $("#artistList li").remove()

      snapshot.forEach((child)=>{
        let nameArt = child.key.toLowerCase();//This is the artist name

        //add to ul
        if((nameArt.indexOf(nameOfArtist)==0)&&(nameOfArtist!="")){
          let $artist = $("<li><span class='artistList'>"+child.key+"</span></li>")
          $("#artistList").append($artist)

        //Add listener to artist name, that triggers the loading of the tracks
          $artist.on('click',()=>{
            loadArtist(child.key)
          })
        //add hover to visualize selected artist
        $artist.on('mouseenter mouseleave',function(){ //keep function for
          console.log("hovering")
          $(this).toggleClass("sizeChange");
        });
        }
      })
    })

  });

  //Signout button
  $('#sign-in').on('click',()=>{
    firebase.auth().signOut().then(function() {
  // Sign-out successful. Redirect to index.html will happen automatically, as the app is listening for changes.
    console.log("Logged out")

    }, function(error) {
    console.log(error)
    });
  })

  //Replace for selection of artist in list
function loadArtist(nameOfArtist){

    //reasign songData to a new variable that stores information of the queried artist
    let artistSongData = songData.child(nameOfArtist);
    //Change artist name
    $('#artistName').text(nameOfArtist);

  //database listener
  artistSongData.on('value',(snapshot)=>{
    let songsArray = []
    //Delete previous elements in table

    snapshot.forEach((child)=>{
      //variable to store all elements of song
      let childData = child.val();
      //variables for playback and storing played time in database
      let src = childData.url;
      let songId = childData.id;
      let owner = childData.owner;//TO keep track of who is the owner of the track
      let votes = childData.votes;
      let title = childData.title;
      let songKey = child.key;

      let $songrow = $("<tr class='row'></tr>");
      let $songTitle = $("<td>"+title+"</td>");
      let $songId = $("<td>"+songId+"</td>");
      // let $songAuthor = $("<td>"+songAuthor+"</td>");
      let $playButton = $("<td><img class='playImg' src='images/play.png'></td>")
      // let $upVoteElement = $('<td><i class="fa fa-thumbs-up pull-right"></i><span class="pull-right">' + votes + '</span></td>')
      let $upVoteElement = $('<td><img src="images/dollar.png"><span>' + votes + '</span></td>')

      $songrow.append($songTitle);
      $songrow.append($songTitle);
      $songrow.append($songId);
      // $songrow.append($songAuthor);
      $songrow.append($playButton);
      $songrow.append($upVoteElement);

      //Add listener to play button
      //or add hover to row instead of different play button

      $playButton.on('click',()=>{
        //stop audio if playing
        if(audioPlayer.paused ==false){
          audioPlayer.pause()
          clearInterval(clock);
          console.log("cleared clock")

          //See if audio src is the same. If different change and start playing again
          if (audioPlayer.src != src){
            //reassingn url with audio
            audioPlayer.src = src;
            //Pause music or pause music again
            startMusic();
            //TODO:Start storing time and crypto generated on users Database
            trackPlayback(songId,nameOfArtist,owner);
          }
        }
        //If audio is paused
         else if ((audioPlayer.paused==true) && (audioPlayer.src == src) ) {
          startMusic();
          //TODO:Start storing time and crypto generated on users Database
          trackPlayback(songId,nameOfArtist,owner);
        } else{

          audioPlayer.src = src;
          //Pause music or pause music again
          startMusic();
          //TODO:Start storing time and crypto generated on users Database
          trackPlayback(songId,nameOfArtist,owner);
        }

      });

      //add listener to cash like
      $upVoteElement.on('click',(e)=>{

        //Add a cash like in songs reference
        //If they have money update vote. subtractMoney takes money away from wallet.
        if(substractMoney()==true){
          updateSongVote(songKey, ++votes, nameOfArtist)
        }

      })
      //push row to table
      songsArray.push($songrow);
    });
    //Eliminate tr's from table
    $('.row').remove();

    songsArray.forEach((el,i)=>{
      $('#player').append(el);
    });
  }); //End song data

} //close artistSearchButton

  function updateSongVote(songKey, vot, author){
    // find message whose objectId is equal to the id we're searching with

    let songReference = songData.child(author).child(songKey);
    // update votes property
    songReference.update({
      votes: vot
    })
  }
  //Play button test
  function startMusic(){
    if(audioPlayer.paused==true){
      audioPlayer.play();
    } else{
      audioPlayer.pause();
    }
  };

  function trackPlayback(id,author,owner){
    //object with registry
    function Registry(i,a,unix,o){
      this.TrackId = i; //this is the tracks unique id
      this.owner = o; //owners uid
      this.fanName = appUser.displayName; //who's listening
      this.author = a; //author referes to artist name
      this.timeUnix = unix;
      this.timePlayed = 0;
    }
    let dateNow = Math.floor(Date.now()/1000);
    let regis = new Registry(id,author,dateNow,owner);

    //Create new entry on database.

    let userRef = userData.child(appUser.uid).child("ListenHistory");
    //Push to the database and store the key in a variable to query later
    let thisKey = userRef.push(regis).key;

    let thisTime = 0;
    console.log("Creating new registry with id="+id+" author= "+author);

    //start clock that will keep track of seconds music is listened to
    clock = setInterval(()=>{
      thisTime+=1;
      //update time key value in Database
      userRef.child(thisKey).child("timePlayed").set(thisTime);
      console.log("Time played = "+thisTime);
    },1000);
  }

  //Function that takes money a=out of wallet. Returns a boolean if the operation was successful
  function substractMoney(){
    let t = true;
    moneyRef.once('value',(child)=>{
        let mNow = 0;
        //Reference current money and substract 1
        child.forEach((thisMoney)=>{
          mNow += parseInt(thisMoney.val().money)
        })
        //Control if person has money
        if (mNow<1){
          t = false;
          alert('Add money to your wallet')
        } else{
          //update reference
          mNow -= 1
          //insert a transaction that takes 1 away
          moneyRef.push({money:-1})
          //update in DOM
          $('#wallet').text("$ "+mNow+" in your account")
        }
    })
      return t
  }
}
